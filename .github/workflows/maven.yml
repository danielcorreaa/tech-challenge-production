name: SonarCloud
on:
  push:
    branches:
      [main, develop, release]
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  unit-test:
    name: Test Coverage
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn test -P unit-test
      - name: Generate JaCoCo Badge
        id: jacoco
        # You may pin to the exact commit or the version.
        # uses: cicirello/jacoco-badge-generator@f33476a5a3fd5a4f77cb5eef2ebe728c1dd5b921
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          fail-if-coverage-less-than: 0.8
          generate-coverage-endpoint: true
          generate-summary: true

  integration-test:
    needs: unit-test
    name: Test Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn test -P integration-test

  bdd-test:
    needs: integration-test
    name: Test BDD
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn clean install -P unit-test
      - run: docker-compose up -d
      - run: docker ps
      - uses: GuillaumeFalourd/wait-sleep-action@v1
        with:
          time: '30' # for 30 seconds
      - run: mvn test -P system-test
      - uses: actions/upload-artifact@v4
        with:
          name: Cucumber Reports
          path: ./target/cucumber-reports/cucumber.html
      - run: docker-compose down

  sonar:
    needs: bdd-test
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=danielcorreaa_tech-challenge-production

  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - run: mvn clean install -P unit-test --file pom.xml

  docker-pull-image:
      name: Pull Image Docker Hub
      if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/release' || github.ref == 'refs/heads/main'
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Setup Java
          uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'
        - name: Build project
          run: mvn clean install -DskipTests
        - name: Login Docker Hub
          run: docker login -u daniel36 -p ${{ secrets.PASSWORD_DOCKER_HUB }}
        - name: Build docker image
          run: docker build -t daniel36/tech-challenge-production:${{github.run_number}} .
        - name: Push image docker
          run: docker push daniel36/tech-challenge-production:${{github.run_number}}

        - name: Build docker image latest
          run: docker build -t daniel36/tech-challenge-product:latest .
        - name: Push image docker latest
          run: docker push daniel36/tech-challenge-product:latest

  deploy-dev:
    name: Deploy dev aws
    needs: docker-pull-image
    if: github.ref == 'refs/heads/develop'
    uses: ./.github/workflows/deploy-dev.yml
    secrets: inherit

  deploy-qa:
    name: Deploy qa aws
    needs: docker-pull-image
    if: github.ref == 'refs/heads/release'
    uses: ./.github/workflows/deploy-release.yml
    secrets: inherit

  deploy-prod:
    name: Deploy production aws
    needs: docker-pull-image
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/deploy-prod.yml
    secrets: inherit